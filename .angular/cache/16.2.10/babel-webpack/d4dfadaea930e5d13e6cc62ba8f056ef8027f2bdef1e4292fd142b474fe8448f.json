{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./login.service\";\nexport class JwtInterceptorService {\n  constructor(loginService) {\n    this.loginService = loginService;\n  }\n  intercept(req, next) {\n    let token = this.loginService.userToken;\n    if (token != \"\") {\n      req = req.clone({\n        setHeaders: {\n          'Content-Type': 'application/json; charset=utf-8',\n          'Accept': 'application/json',\n          'Authorization': `Bearer ${token}`\n        }\n      });\n    }\n    return next.handle(req);\n  }\n  static #_ = this.ɵfac = function JwtInterceptorService_Factory(t) {\n    return new (t || JwtInterceptorService)(i0.ɵɵinject(i1.LoginService));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: JwtInterceptorService,\n    factory: JwtInterceptorService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["JwtInterceptorService","constructor","loginService","intercept","req","next","token","userToken","clone","setHeaders","handle","_","i0","ɵɵinject","i1","LoginService","_2","factory","ɵfac","providedIn"],"sources":["/home/camper/Documentos/SurveyFrontend/src/app/services/auth/jwt-interceptor.service.ts"],"sourcesContent":["import { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { LoginService } from './login.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class JwtInterceptorService implements HttpInterceptor {\n\n  constructor(private loginService:LoginService) { }\n\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    let token:String=this.loginService.userToken;\n\n    if (token!=\"\"){\n      req=req.clone(\n        {\n          setHeaders: {\n            'Content-Type': 'application/json; charset=utf-8',\n            'Accept': 'application/json',\n            'Authorization': `Bearer ${token}`,\n          },\n        }\n      );\n    }\n    return next.handle(req);\n  }\n}\n"],"mappings":";;AAQA,OAAM,MAAOA,qBAAqB;EAEhCC,YAAoBC,YAAyB;IAAzB,KAAAA,YAAY,GAAZA,YAAY;EAAiB;EAEjDC,SAASA,CAACC,GAAqB,EAAEC,IAAiB;IAChD,IAAIC,KAAK,GAAQ,IAAI,CAACJ,YAAY,CAACK,SAAS;IAE5C,IAAID,KAAK,IAAE,EAAE,EAAC;MACZF,GAAG,GAACA,GAAG,CAACI,KAAK,CACX;QACEC,UAAU,EAAE;UACV,cAAc,EAAE,iCAAiC;UACjD,QAAQ,EAAE,kBAAkB;UAC5B,eAAe,EAAE,UAAUH,KAAK;;OAEnC,CACF;;IAEH,OAAOD,IAAI,CAACK,MAAM,CAACN,GAAG,CAAC;EACzB;EAAC,QAAAO,CAAA,G;qBAnBUX,qBAAqB,EAAAY,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,YAAA;EAAA;EAAA,QAAAC,EAAA,G;WAArBhB,qBAAqB;IAAAiB,OAAA,EAArBjB,qBAAqB,CAAAkB,IAAA;IAAAC,UAAA,EAFpB;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}