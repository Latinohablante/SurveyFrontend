{"ast":null,"code":"import { catchError, throwError } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class UserService {\n  constructor(http) {\n    this.http = http;\n  }\n  getUser(id) {\n    return this.http.get(environment.urlApi + \"user/\" + id).pipe(catchError(this.handleError));\n  }\n  updateUser(userRequest) {\n    return this.http.put(environment.urlApi + \"user\", userRequest).pipe(catchError(this.handleError));\n  }\n  handleError(error) {\n    if (error.status === 0) {\n      console.error('Se ha producio un error ', error.error);\n    } else {\n      console.error('Backend retornó el código de estado ', error.status, error.error);\n    }\n    return throwError(() => new Error('Algo falló. Por favor intente nuevamente.'));\n  }\n  static #_ = this.ɵfac = function UserService_Factory(t) {\n    return new (t || UserService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UserService,\n    factory: UserService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["catchError","throwError","environment","UserService","constructor","http","getUser","id","get","urlApi","pipe","handleError","updateUser","userRequest","put","error","status","console","Error","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["/home/camper/Documentos/SurveyFrontend/src/app/services/user/user.service.ts"],"sourcesContent":["import { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, catchError, retry, throwError } from 'rxjs';\nimport { User } from '../auth/user';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  constructor(private http:HttpClient) { }\n\n  getUser(id:number):Observable<User>{\n    return this.http.get<User>(environment.urlApi+\"user/\"+id).pipe(\n      catchError(this.handleError)\n    )\n  }\n\n  updateUser(userRequest:User):Observable<any>\n  {\n    return this.http.put(environment.urlApi+\"user\", userRequest).pipe(\n      catchError(this.handleError)\n    )\n  }\n\n  private handleError(error:HttpErrorResponse){\n    if(error.status===0){\n      console.error('Se ha producio un error ', error.error);\n    }\n    else{\n      console.error('Backend retornó el código de estado ', error.status, error.error);\n    }\n    return throwError(()=> new Error('Algo falló. Por favor intente nuevamente.'));\n  }\n}\n"],"mappings":"AAEA,SAAqBA,UAAU,EAASC,UAAU,QAAQ,MAAM;AAEhE,SAASC,WAAW,QAAQ,8BAA8B;;;AAK1D,OAAM,MAAOC,WAAW;EAEtBC,YAAoBC,IAAe;IAAf,KAAAA,IAAI,GAAJA,IAAI;EAAe;EAEvCC,OAAOA,CAACC,EAAS;IACf,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAON,WAAW,CAACO,MAAM,GAAC,OAAO,GAACF,EAAE,CAAC,CAACG,IAAI,CAC5DV,UAAU,CAAC,IAAI,CAACW,WAAW,CAAC,CAC7B;EACH;EAEAC,UAAUA,CAACC,WAAgB;IAEzB,OAAO,IAAI,CAACR,IAAI,CAACS,GAAG,CAACZ,WAAW,CAACO,MAAM,GAAC,MAAM,EAAEI,WAAW,CAAC,CAACH,IAAI,CAC/DV,UAAU,CAAC,IAAI,CAACW,WAAW,CAAC,CAC7B;EACH;EAEQA,WAAWA,CAACI,KAAuB;IACzC,IAAGA,KAAK,CAACC,MAAM,KAAG,CAAC,EAAC;MAClBC,OAAO,CAACF,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAACA,KAAK,CAAC;KACvD,MACG;MACFE,OAAO,CAACF,KAAK,CAAC,sCAAsC,EAAEA,KAAK,CAACC,MAAM,EAAED,KAAK,CAACA,KAAK,CAAC;;IAElF,OAAOd,UAAU,CAAC,MAAK,IAAIiB,KAAK,CAAC,2CAA2C,CAAC,CAAC;EAChF;EAAC,QAAAC,CAAA,G;qBAzBUhB,WAAW,EAAAiB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAXrB,WAAW;IAAAsB,OAAA,EAAXtB,WAAW,CAAAuB,IAAA;IAAAC,UAAA,EAFV;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}