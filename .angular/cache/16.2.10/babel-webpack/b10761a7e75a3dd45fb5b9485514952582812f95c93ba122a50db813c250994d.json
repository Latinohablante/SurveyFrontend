{"ast":null,"code":"import { throwError, catchError, BehaviorSubject, tap, map } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class LoginService {\n  constructor(http) {\n    this.http = http;\n    this.currentUserLoginOn = new BehaviorSubject(false);\n    this.currentUserData = new BehaviorSubject(\"\");\n    this.currentUserLoginOn = new BehaviorSubject(sessionStorage.getItem(\"token\") != null);\n    this.currentUserData = new BehaviorSubject(sessionStorage.getItem(\"token\") || \"\");\n  }\n  login(credentials) {\n    return this.http.post(environment.urlHost + \"auth/login\", credentials).pipe(tap(userData => {\n      sessionStorage.setItem(\"token\", userData.token);\n      this.currentUserData.next(userData.token);\n      this.currentUserLoginOn.next(true);\n    }), map(userData => userData.token), catchError(this.handleError));\n  }\n  logout() {\n    sessionStorage.removeItem(\"token\");\n    this.currentUserLoginOn.next(false);\n  }\n  handleError(error) {\n    if (error.status === 0) {\n      console.error('Se ha producio un error ', error.error);\n    } else {\n      console.error('Backend retornó el código de estado ', error);\n    }\n    return throwError(() => new Error('Algo falló. Por favor intente nuevamente.'));\n  }\n  get userData() {\n    return this.currentUserData.asObservable();\n  }\n  get userLoginOn() {\n    return this.currentUserLoginOn.asObservable();\n  }\n  get userToken() {\n    return this.currentUserData.value;\n  }\n  static #_ = this.ɵfac = function LoginService_Factory(t) {\n    return new (t || LoginService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: LoginService,\n    factory: LoginService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["throwError","catchError","BehaviorSubject","tap","map","environment","LoginService","constructor","http","currentUserLoginOn","currentUserData","sessionStorage","getItem","login","credentials","post","urlHost","pipe","userData","setItem","token","next","handleError","logout","removeItem","error","status","console","Error","asObservable","userLoginOn","userToken","value","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["/home/camper/Documentos/SurveyFrontend/src/app/services/auth/login.service.ts"],"sourcesContent":["import { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { LoginRequest } from './loginRequest';\nimport  {  Observable, throwError, catchError, BehaviorSubject , tap, map} from 'rxjs';\nimport { User } from './user';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginService {\n\n  currentUserLoginOn: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\n  currentUserData: BehaviorSubject<String> =new BehaviorSubject<String>(\"\");\n\n  constructor(private http: HttpClient) { \n    this.currentUserLoginOn=new BehaviorSubject<boolean>(sessionStorage.getItem(\"token\")!=null);\n    this.currentUserData=new BehaviorSubject<String>(sessionStorage.getItem(\"token\") || \"\");\n  }\n\n  login(credentials:LoginRequest):Observable<any>{\n    return this.http.post<any>(environment.urlHost+\"auth/login\",credentials).pipe(\n      tap( (userData) => {\n        sessionStorage.setItem(\"token\", userData.token);\n        this.currentUserData.next(userData.token);\n        this.currentUserLoginOn.next(true);\n      }),\n      map((userData)=> userData.token),\n      catchError(this.handleError)\n    );\n  }\n\n  logout():void{\n    sessionStorage.removeItem(\"token\");\n    this.currentUserLoginOn.next(false);\n  }\n\n  private handleError(error:HttpErrorResponse){\n    if(error.status===0){\n      console.error('Se ha producio un error ', error.error);\n    }\n    else{\n      console.error('Backend retornó el código de estado ', error);\n    }\n    return throwError(()=> new Error('Algo falló. Por favor intente nuevamente.'));\n  }\n\n  get userData():Observable<String>{\n    return this.currentUserData.asObservable();\n  }\n\n  get userLoginOn(): Observable<boolean>{\n    return this.currentUserLoginOn.asObservable();\n  }\n\n  get userToken():String{\n    return this.currentUserData.value;\n  }\n\n}\n"],"mappings":"AAGA,SAAuBA,UAAU,EAAEC,UAAU,EAAEC,eAAe,EAAGC,GAAG,EAAEC,GAAG,QAAO,MAAM;AAEtF,SAASC,WAAW,QAAQ,8BAA8B;;;AAK1D,OAAM,MAAOC,YAAY;EAKvBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAHxB,KAAAC,kBAAkB,GAA6B,IAAIP,eAAe,CAAU,KAAK,CAAC;IAClF,KAAAQ,eAAe,GAA2B,IAAIR,eAAe,CAAS,EAAE,CAAC;IAGvE,IAAI,CAACO,kBAAkB,GAAC,IAAIP,eAAe,CAAUS,cAAc,CAACC,OAAO,CAAC,OAAO,CAAC,IAAE,IAAI,CAAC;IAC3F,IAAI,CAACF,eAAe,GAAC,IAAIR,eAAe,CAASS,cAAc,CAACC,OAAO,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;EACzF;EAEAC,KAAKA,CAACC,WAAwB;IAC5B,OAAO,IAAI,CAACN,IAAI,CAACO,IAAI,CAAMV,WAAW,CAACW,OAAO,GAAC,YAAY,EAACF,WAAW,CAAC,CAACG,IAAI,CAC3Ed,GAAG,CAAGe,QAAQ,IAAI;MAChBP,cAAc,CAACQ,OAAO,CAAC,OAAO,EAAED,QAAQ,CAACE,KAAK,CAAC;MAC/C,IAAI,CAACV,eAAe,CAACW,IAAI,CAACH,QAAQ,CAACE,KAAK,CAAC;MACzC,IAAI,CAACX,kBAAkB,CAACY,IAAI,CAAC,IAAI,CAAC;IACpC,CAAC,CAAC,EACFjB,GAAG,CAAEc,QAAQ,IAAIA,QAAQ,CAACE,KAAK,CAAC,EAChCnB,UAAU,CAAC,IAAI,CAACqB,WAAW,CAAC,CAC7B;EACH;EAEAC,MAAMA,CAAA;IACJZ,cAAc,CAACa,UAAU,CAAC,OAAO,CAAC;IAClC,IAAI,CAACf,kBAAkB,CAACY,IAAI,CAAC,KAAK,CAAC;EACrC;EAEQC,WAAWA,CAACG,KAAuB;IACzC,IAAGA,KAAK,CAACC,MAAM,KAAG,CAAC,EAAC;MAClBC,OAAO,CAACF,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAACA,KAAK,CAAC;KACvD,MACG;MACFE,OAAO,CAACF,KAAK,CAAC,sCAAsC,EAAEA,KAAK,CAAC;;IAE9D,OAAOzB,UAAU,CAAC,MAAK,IAAI4B,KAAK,CAAC,2CAA2C,CAAC,CAAC;EAChF;EAEA,IAAIV,QAAQA,CAAA;IACV,OAAO,IAAI,CAACR,eAAe,CAACmB,YAAY,EAAE;EAC5C;EAEA,IAAIC,WAAWA,CAAA;IACb,OAAO,IAAI,CAACrB,kBAAkB,CAACoB,YAAY,EAAE;EAC/C;EAEA,IAAIE,SAASA,CAAA;IACX,OAAO,IAAI,CAACrB,eAAe,CAACsB,KAAK;EACnC;EAAC,QAAAC,CAAA,G;qBA/CU3B,YAAY,EAAA4B,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAZhC,YAAY;IAAAiC,OAAA,EAAZjC,YAAY,CAAAkC,IAAA;IAAAC,UAAA,EAFX;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}