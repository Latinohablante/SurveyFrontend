{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"src/app/services/auth/login.service\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"../../shared/nav/nav.component\";\nfunction LoginComponent_div_8_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" El Email es requerido. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_div_8_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" El Email debe tener un formato v\\u00E1lido. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 1);\n    i0.ɵɵtemplate(1, LoginComponent_div_8_div_1_Template, 2, 0, \"div\", 9);\n    i0.ɵɵtemplate(2, LoginComponent_div_8_div_2_Template, 2, 0, \"div\", 9);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.email.errors == null ? null : ctx_r0.email.errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.email.errors == null ? null : ctx_r0.email.errors[\"email\"]);\n  }\n}\nfunction LoginComponent_div_13_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" El Password es requerido. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 1);\n    i0.ɵɵtemplate(1, LoginComponent_div_13_div_1_Template, 2, 0, \"div\", 9);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.password.errors == null ? null : ctx_r1.password.errors[\"required\"]);\n  }\n}\nexport class LoginComponent {\n  constructor(formBuilder, router, loginService) {\n    this.formBuilder = formBuilder;\n    this.router = router;\n    this.loginService = loginService;\n    this.loginError = \"\";\n    this.loginForm = this.formBuilder.group({\n      username: ['', [Validators.required, Validators.email]],\n      password: ['', Validators.required]\n    });\n  }\n  ngOnInit() {}\n  get email() {\n    return this.loginForm.controls.username;\n  }\n  get password() {\n    return this.loginForm.controls.password;\n  }\n  login() {\n    if (this.loginForm.valid) {\n      this.loginError = \"\";\n      this.loginService.login(this.loginForm.value).subscribe({\n        next: userData => {\n          console.log(userData);\n        },\n        error: errorData => {\n          console.error(errorData);\n          this.loginError = errorData;\n        },\n        complete: () => {\n          console.info(\"Login completo\");\n          this.router.navigateByUrl('/inicio');\n          this.loginForm.reset();\n        }\n      });\n    } else {\n      this.loginForm.markAllAsTouched();\n      alert(\"Error al ingresar los datos.\");\n    }\n  }\n  static #_ = this.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.LoginService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"app-login\"]],\n    decls: 16,\n    vars: 4,\n    consts: [[3, \"formGroup\"], [1, \"text-danger\"], [1, \"mb-3\"], [\"for\", \"exampleInputEmail1\", 1, \"form-label\"], [\"formControlName\", \"username\", \"type\", \"email\", \"id\", \"exampleInputEmail1\", \"aria-describedby\", \"emailHelp\", 1, \"form-control\"], [\"class\", \"text-danger\", 4, \"ngIf\"], [\"for\", \"exampleInputPassword1\", 1, \"form-label\"], [\"formControlName\", \"password\", \"type\", \"password\", \"id\", \"exampleInputPassword1\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"click\"], [4, \"ngIf\"]],\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"app-nav\");\n        i0.ɵɵelementStart(1, \"form\", 0)(2, \"p\", 1);\n        i0.ɵɵtext(3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"div\", 2)(5, \"label\", 3);\n        i0.ɵɵtext(6, \"Email\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(7, \"input\", 4);\n        i0.ɵɵtemplate(8, LoginComponent_div_8_Template, 3, 2, \"div\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"div\", 2)(10, \"label\", 6);\n        i0.ɵɵtext(11, \"Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(12, \"input\", 7);\n        i0.ɵɵtemplate(13, LoginComponent_div_13_Template, 2, 1, \"div\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"button\", 8);\n        i0.ɵɵlistener(\"click\", function LoginComponent_Template_button_click_14_listener() {\n          return ctx.login();\n        });\n        i0.ɵɵtext(15, \"Iniciar Sesi\\u00F3n\");\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate(ctx.loginError);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.email.invalid && (ctx.email.dirty || ctx.email.touched));\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.password.invalid && (ctx.password.dirty || ctx.password.touched));\n      }\n    },\n    dependencies: [i4.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i5.NavComponent],\n    styles: [\"form[_ngcontent-%COMP%] {\\n    margin: 20px;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvYXV0aC9sb2dpbi9sb2dpbi5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksWUFBWTtBQUNoQiIsInNvdXJjZXNDb250ZW50IjpbImZvcm0ge1xuICAgIG1hcmdpbjogMjBweDtcbn0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n  });\n}","map":{"version":3,"names":["Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵtemplate","LoginComponent_div_8_div_1_Template","LoginComponent_div_8_div_2_Template","ɵɵadvance","ɵɵproperty","ctx_r0","email","errors","LoginComponent_div_13_div_1_Template","ctx_r1","password","LoginComponent","constructor","formBuilder","router","loginService","loginError","loginForm","group","username","required","ngOnInit","controls","login","valid","value","subscribe","next","userData","console","log","error","errorData","complete","info","navigateByUrl","reset","markAllAsTouched","alert","_","ɵɵdirectiveInject","i1","FormBuilder","i2","Router","i3","LoginService","_2","selectors","decls","vars","consts","template","LoginComponent_Template","rf","ctx","ɵɵelement","LoginComponent_div_8_Template","LoginComponent_div_13_Template","ɵɵlistener","LoginComponent_Template_button_click_14_listener","ɵɵtextInterpolate","invalid","dirty","touched"],"sources":["/home/camper/Documentos/SurveyFrontend/src/app/auth/login/login.component.ts","/home/camper/Documentos/SurveyFrontend/src/app/auth/login/login.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators} from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { LoginService } from 'src/app/services/auth/login.service';\nimport { LoginRequest } from 'src/app/services/auth/loginRequest';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  loginError:string=\"\";\n  loginForm=this.formBuilder.group({\n    username:['',[Validators.required,Validators.email]],\n    password: ['',Validators.required],\n  })\n  constructor(private formBuilder:FormBuilder, private router:Router, private loginService: LoginService) { }\n\n  ngOnInit(): void {\n  }\n\n  get email(){\n    return this.loginForm.controls.username;\n  }\n\n  get password()\n  {\n    return this.loginForm.controls.password;\n  }\n\n  login(){\n    if(this.loginForm.valid){\n      this.loginError=\"\";\n      this.loginService.login(this.loginForm.value as LoginRequest).subscribe({\n        next: (userData) => {\n          console.log(userData);\n        },\n        error: (errorData) => {\n          console.error(errorData);\n          this.loginError=errorData;\n        },\n        complete: () => {\n          console.info(\"Login completo\");\n          this.router.navigateByUrl('/inicio');\n          this.loginForm.reset();\n        }\n      })\n\n    }\n    else{\n      this.loginForm.markAllAsTouched();\n      alert(\"Error al ingresar los datos.\");\n    }\n  }\n\n}\n","<app-nav></app-nav>\n<form [formGroup]=\"loginForm\">\n    <p class=\"text-danger\">{{loginError}}</p>\n    <div class=\"mb-3\">\n      <label for=\"exampleInputEmail1\" class=\"form-label\">Email</label>\n      <input formControlName=\"username\" type=\"email\" class=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\">  \n        <div *ngIf=\"email.invalid && (email.dirty || email.touched)\"\n            class=\"text-danger\">\n            <div *ngIf=\"email.errors?.['required']\">\n                El Email es requerido.\n            </div>\n            <div *ngIf=\"email.errors?.['email']\">\n                El Email debe tener un formato válido.\n            </div>\n        </div>\n    </div>\n    <div class=\"mb-3\">\n      <label for=\"exampleInputPassword1\" class=\"form-label\">Password</label>\n      <input formControlName=\"password\" type=\"password\" class=\"form-control\" id=\"exampleInputPassword1\">\n        <div *ngIf=\"password.invalid && (password.dirty || password.touched)\"\n            class=\"text-danger\">\n            <div *ngIf=\"password.errors?.['required']\">\n                El Password es requerido.\n            </div>\n        </div> \n    </div>\n    <button type=\"submit\" (click)=\"login()\" class=\"btn btn-primary\">Iniciar Sesión</button>\n</form>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}